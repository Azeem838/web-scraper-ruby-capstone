exit
BookData.new(1, section).section_name
BookData.new(1, section).book_data_array
BookData.new(1, section).section_name
BookData.new(1, section).book_info
BookData.new(1, section).link
BookData.new(1, section).description
BookData.new(1, section).time
BookData.new(1, section).author
BookData.new(1, section).title
BookData.new(1, section).book_data_array
BookData.new(1, section)
section = sections[0]
sections
clear
book
exit
book
exit
BookData.new
book
exit
num_of_ratings = doc.at_css('span.minirating').text.split[4].gsub(/,/, '').to_i
avg_rating = doc.at_css('span.minirating').text.split[0].to_f
doc = Nokogiri::HTML.parse(browser.html)
browser.send_keys :enter
browser.text_field(id: 'sitesearch_field').set "HARRY POTTER"
exit
doc.at_css('span.minirating').text.split[4].gsub(/,/ ,"").to_i
doc.at_css('span.minirating').text.split[4].gsub(,/ ,"").to_i
doc.at_css('span.minirating').text.split[4].gsub(/,,"").to_i
doc.at_css('span.minirating').text.split[4].gsub(/,/ ,"").to_i
doc.at_css('span.minirating').text.split[4].gsub(/[\,]/ ,"").to_i
doc.at_css('span.minirating').text.split[4].gsub(/[\s,]/ ,"").to_i
doc.at_css('span.minirating').text.split[4].gsub(/[\s,]/ ,"")
doc.at_css('span.minirating').text.split[4]
doc.at_css('span.minirating').text.split[4].split
doc.at_css('span.minirating').text.split[4]
doc.at_css('span.minirating').text.split[4].to_i
doc.at_css('span.minirating').text.split[4].to_f
doc.at_css('span.minirating').text.split
rating
exit
books.count
exit
books[0][1]
book[0][1]
books
exit
book_wrapper[i].at_css('a.css-hndxeu').attributes["href"].value
book_wrapper[i].at_css('a.css-hndxeu').value
book_wrapper[i].at_css('a.css-hndxeu')
book_wrapper[i].css('p.css-5yxv3r').text
book_wrapper[i].css('p.css-5yxv3r').tex
exit
sections
exit
books_shown[i].at_css('a')
books_shown[i].css('a.css-hndxeu')
books_shown[i].at_css('a.css-hndxeu')
books_shown[i].at_css('li.css-hndxeu')
books_shown[i].at_css('li.css-hndxeu').text
books_shown
books.shown
exit
continue
section_name
continue
section_name
continue
section_name
continue
section_name
continue
section_name
continue
section_name
continue
section_name
continue
section_name
exit
continue
exit
books_shown.count
exit
books.last
books.first
books
exit
section_name
continue
section_name
book[:title]
continue
book[:title]
continue
book[:author]
book[:title]
continue
book[:title]
section_name
exit
book[:time]
book[:title]
book[:author]
exit
section_name
continue
book[:title]
books
book
continue
section_name
continue
book[author]
section_name
exit
first_section.css('a.css-nzgijy')
first_section = sections.first
sections
section_name
section_nam
exit
first_section = sections.first
sections.first
parsed_page.css('div.css-v2kl5d').first
parsed_page.css('div.css-v2kl5d').first.css('section.css-1efiz68')
parsed_page.css('div.css-v2kl5d').first
parsed_page.css('div.css-v2kl5d')
parsed_page.css('div.css-v2kl5d'')
sections.first.css('section.css-1efiz68')
sections.first
sections
exit
book[:title]
book[:author]
section_name
exit
books[:title]
book[:title]
book[:author]
section_name
exit
section_name
secton_name
exit
first_book.css('p.css-t7cods').text
first_book.css('a.css-g5yn3w').text
first_book.css('a.css-nzgijy').text
first_book.css('a.css-nzgijy')
first_book.css(a.css-nzgijy)
first_book = books.first
exit
first_book
first_book.css('section.css-1efiz68')
first_book.css('p.css-t7cods').text
first_book.css('p.css-t7cods')
first_book.css('p.css-t7cods').text
first_book.css('a.css-nzgijy')
first_book = books.first
books.first
exit
exi
book[:time]
]
book[:title]
book[:author]
exit
books = parsed_page.css('a.css-g5yn3w')exit
first_book.css('p.css-t7cods').text
first_book.css('p.css-5yxv3r').text
').text
first_book.css('h3.css-i1z3c1').text
first_book.css('h3.css-i1z3c1')
first_book
first_job
first_book = books.first
books.first
books.count
books = parsed_page.css('a.css-g5yn3w')
parsed_page.css('a.css-g5yn3w')
parsed_page
unparsed_page
url
clear
exit
exit5
books.count
continue
book[:title]
book[:description]
book[:author]
continue
book[:author]
book[:description]
book[:time]
continue
book[:description]
book[:time]
book[:title]
continue
book[:title]
book[:description]
book[:time]
book[:author]
book[author]
exit
job[:title]
exit
job[:url]
job[:company]
job[:location]
job[:title]
job[title]
continue
job[:url]
job[:location]
continue
job[:location]
exit
job[:company]
job[:lcompany]
job[:location]
exit
exir
continue
job[:location]
job[:company]
job[:title]
continue
contie
jobCards.count
parsed_page
unparsed_page
jobCards.count
first_job.css('a')[0].attributes["href"].value
first_job.css('a')[0].attributes["href"]
first_job.css('a')[0].attributes
first_job.css('a')[0]
first_job.css('a')
first_job.css('span.location').text
first_job.css('span.company').text
first_job.css('h2.title').text
first_job.css('h2.title')
first_job
first_job = jobCards.first
first_job - jobCards.first
jobCards.first
jobCard.first
jobCard.count
jobCards = parsed_page.css('div.jobsearch-SerpJobCard')
jobCards = parsed_page.css(''div.jobsearch-SerpJobCard)
parsed_page.css('div.jobsearch-SerpJobCard')
parsed_page
unparsed_page
